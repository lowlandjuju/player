{"version":3,"sources":["../libs/player.js"],"names":[],"mappings":"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","file":"player.js","sourcesContent":["/**\r\n*\r\n* Command line interface mp3 player based on Node.js\r\n* @Author:   [turingou](http://guoyu.me)\r\n* @Created:  [2013/07/20]\r\n*\r\n**/\r\n\r\nimport fs from 'fs'\r\nimport path from 'path'\r\nimport util from \"util\"\r\nimport { http, https } from 'follow-redirects'\r\nimport home from 'home'\r\nimport lame from 'lame'\r\nimport _ from 'underscore'\r\nimport Speaker from 'speaker'\r\nimport PoolStream from 'pool_stream'\r\nimport Volume from 'pcm-volume'\r\nimport { EventEmitter } from \"events\"\r\nimport { fetchName, splitName, format, getProgress, chooseRandom } from './utils'\r\n\r\nconst defaults = {\r\n  'src': 'src',\r\n  'cache': false,\r\n  'stream': false,\r\n  'shuffle': false,\r\n  'downloads': home(),\r\n  'http_proxy': process.env.HTTP_PROXY || process.env.http_proxy || null,\r\n}\r\n\r\n/**\r\n * [Class Player]\r\n * @param {Array|String} songs  [A list of songs or a single song URI string.]\r\n * @param {Object}       params [Optional options when init a instance]\r\n */\r\nexport default class Player extends EventEmitter {\r\n  constructor(songs, params) {\r\n//    if (!songs)\r\n//      return\r\n\r\n    // Inherits eventEmitter\r\n    super()\r\n\r\n    this.history = []\r\n    this.paused = false\r\n    this.options = _.extend(defaults, params)\r\n    this._list = format(songs || [], this.options.src)\r\n    if (!this._list || !this._list.length) this._list = []\r\n  }\r\n\r\n  // Enable or disable a option\r\n  enable(k) {\r\n    this.options[k] = true\r\n    return this\r\n  }\r\n\r\n  disable(k) {\r\n    this.options[k] = false\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * [Lists songs in the playlist,\r\n   * Displays the src for each song returned in array,\r\n   * Access with prop `player.list`]\r\n   */\r\n  get list() {\r\n    if (!this._list)\r\n      return\r\n\r\n    return this._list.map(el => el[this.options.src])\r\n  }\r\n\r\n  // Get the lastest playing song\r\n  get playing() {\r\n    if (!this.history.length)\r\n      return null\r\n\r\n    return this._list[this.history[this.history.length - 1]]\r\n  }\r\n\r\n  /**\r\n   * [Play a MP3 encoded audio file]\r\n   * @param  {Number} index [the selected index of first played song]\r\n   */\r\n  play(index = 0) {\r\n    if (this._list.length <= 0)\r\n      return\r\n    if (!_.isNumber(index))\r\n      index = 0\r\n    if (index >= this._list.length) index = this._list.length - 1;\r\n\r\n    let self = this\r\n    let song = this._list[index]\r\n\r\n    this.paused = false\r\n    this.read(song[this.options.src], (err, pool) => {\r\n      if (err)\r\n        return this.emit('error', err)\r\n\r\n      this.meta(pool, (err, data) => {\r\n        if (!err) \r\n          song.meta = data\r\n      })\r\n\r\n      this.lameStream = new lame.Decoder()\r\n\r\n      pool\r\n        .pipe(this.lameStream)\r\n        .once('format', onPlaying)\r\n        .once('finish', () => this.next())\r\n\r\n      function onPlaying(f) {\r\n        self.lameFormat = f\r\n        var speaker = new Volume()\r\n        speaker.pipe(new Speaker(self.lameFormat))\r\n\r\n        self.speaker = {\r\n          'readableStream': this,\r\n          'Speaker': speaker,\r\n        }\r\n\r\n        self.emit('playing', song)\r\n        self.history.push(index)\r\n\r\n        // This is where the song acturaly played end,\r\n        // can't trigger playend event here cause\r\n        // unpipe will fire this speaker's close event.\r\n        this.pipe(speaker)\r\n          .once('close', () => \r\n            self.emit('playend', song))\r\n      }\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * [Set playback volume]\r\n   * @param  {Number}   volume   [Volume level percentage 0.0-1.0]\r\n   */\r\n   setVolume(volume) {\r\n       if(!this.speaker)\r\n           return;\r\n\r\n       this.speaker.Speaker.setVolume(volume);\r\n   }\r\n\r\n  /**\r\n   * [Read MP3 src and check if we're going to download it.]\r\n   * @param  {String}   src      [MP3 file src, would be local path or URI (http/https)]\r\n   * @param  {Function} callback [callback with err and file stream]\r\n   */\r\n  read(src, callback) {\r\n    var isLocal = !(src.indexOf('http') == 0 || src.indexOf('https') == 0)\r\n\r\n    // Read local file stream if not a valid URI\r\n    if (isLocal)\r\n      return callback(null, fs.createReadStream(src))\r\n\r\n    var file = path.join(\r\n      this.options.downloads,\r\n      fetchName(src)\r\n    )\r\n\r\n    if (fs.existsSync(file))\r\n      return callback(null, fs.createReadStream(file))\r\n\r\n    this.download(src, callback)\r\n  }\r\n\r\n  /**\r\n   * [Pause or resume audio]\r\n   * @return {player} this\r\n   */\r\n  pause() {\r\n    if (this.paused) {\r\n      this.speaker.Speaker = new Volume()\r\n      this.speaker.Speaker.pipe(new Speaker(this.lameFormat))\r\n\r\n      this.lameStream.pipe(this.speaker.Speaker)\r\n    } else {\r\n      this.speaker.Speaker.end()\r\n    }\r\n\r\n    this.paused = !this.paused\r\n    return this\t\r\n  }\r\n\r\n  /**\r\n   * [Stop playing and unpipe stream.\r\n   * No params for now.]\r\n   * @return {Bool} [always `false`]\r\n   */\r\n  stop() {\r\n    if (!this.speaker)\r\n      return\r\n\r\n    this.speaker\r\n      .readableStream\r\n      .unpipe()\r\n\r\n    this.speaker\r\n      .Speaker\r\n      .end()\r\n\r\n    return\r\n  }\r\n\r\n  /**\r\n   * [Stop playing and switch to next song,\r\n   * if there is no next song, trigger a `No next song` error event]\r\n   * @return {player} this\r\n   */\r\n  next() {\r\n    let list = this._list\r\n    let current = this.playing\r\n    let nextIndex = this.options.shuffle ? \r\n      chooseRandom(_.difference(list, [current._id])) :\r\n      current._id + 1\r\n\r\n    if (nextIndex >= list.length) {\r\n      this.emit('error', 'No next song was found')\r\n      this.emit('finish', current)\r\n      return this\r\n    }\r\n\r\n    this.stop()\r\n    setTimeout(() => {\r\n      this.play(nextIndex)\r\n    },3000)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * [Stop playing and switch to previous song,\r\n   * if there is no previous song, trigger a `No previous song` error event]\r\n   * @return {player} this\r\n   */\r\n  previous() {\r\n    let list = this._list\r\n    let current = this.playing\r\n    let previousIndex = this.options.shuffle ? \r\n      chooseRandom(_.difference(list, [current._id])) :\r\n      current._id - 1\r\n\r\n    if (previousIndex < 0) {\r\n      this.emit('error', 'No previous song was found')\r\n      this.emit('finish', current)\r\n      return this\r\n    }\r\n\r\n    this.stop()\r\n    this.play(previousIndex)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * [Add a new song to the playlist,\r\n   * If provided `song` is a String, it will be converted to a `Song` Object.]\r\n   * @param {String|Object} song [src URI of new song or the object of new song.]\r\n   */\r\n  add(song) {\r\n    var latest = _.isObject(song) ? song : {}\r\n\r\n    latest._id = this._list.length\r\n\r\n    if (_.isString(song)) {\r\n      latest._name = splitName(song)\r\n      latest[this.options.src] = song\r\n    }\r\n\r\n    this._list.push(latest)\r\n  }\r\n\r\n  newPlaylist(songs) {\r\n    this.stop()\r\n    setTimeout(() => {\r\n      this._list = format(songs || [], this.options.src)\r\n    }, 1000)\r\n  }\r\n\r\n  /**\r\n   * [Download a mp3 file from its URI]\r\n   * @param  {String}   src      [the src URI of mp3 file]\r\n   * @param  {Function} callback [callback with err and file stream]\r\n   */\r\n  download(src, callback) {\r\n    var self = this\r\n    var called = false\r\n    var proxyReg = /http:\\/\\/((?:\\d{1,3}\\.){3}\\d{1,3}):(\\d+)/\r\n    var http_proxy = self.options.http_proxy\r\n    var request = src.indexOf('https') === 0 ? https : http\r\n    var query = src\r\n\r\n    if (http_proxy && proxyReg.test(http_proxy)) {\r\n      var proxyGroup = http_proxy.match(proxyReg)\r\n      query = {}\r\n      query.path = src\r\n      query.host = proxyGroup[1]\r\n      query.port = proxyGroup[2]\r\n    }\r\n\r\n    request\r\n      .get(query, responseHandler)\r\n      .once('error', errorHandler)\r\n\r\n    function responseHandler(res) {\r\n      called = true\r\n\r\n      var isOk = (res.statusCode === 200)\r\n      var isAudio = (res.headers['content-type'].indexOf('audio/mpeg') > -1)\r\n      var isSave = self.options.cache\r\n      var isStream = self.options.stream\r\n\r\n      if (!isOk)\r\n        return callback(new Error('Resource invalid'))\r\n      if (isStream)\r\n        return callback(null, res)\r\n      if (!isAudio)\r\n        return callback(new Error('Resource type is unsupported'))\r\n\r\n      // Create a pool\r\n      var pool = new PoolStream()\r\n      // Pipe into memory\r\n      res.pipe(pool)\r\n\r\n      // Check if we're going to save this stream\r\n      if (!isSave)\r\n        return callback(null, pool)\r\n\r\n      // Save this stream as file in download directory\r\n      var file = path.join(\r\n        self.options.downloads,\r\n        fetchName(src)\r\n      )\r\n\r\n      self.emit('downloading', src)\r\n      pool.pipe(fs.createWriteStream(file))\r\n\r\n      // Callback the pool\r\n      callback(null, pool)\r\n    }\r\n\r\n    function errorHandler(err) {\r\n      if (!called)\r\n        callback(err)\r\n    }\r\n  }\r\n\r\n  // Fetch metadata from local or remote mp3 stream\r\n  meta(stream, callback) {\r\n    try {\r\n      var mm = require('musicmetadata')\r\n    } catch (err) {\r\n      return callback(err)\r\n    }\r\n\r\n    var options = {\r\n      'duration': true\r\n    }\r\n\r\n    stream.on('error', err => \r\n      this.emit('error', `出错了 ${err.code}: ${err.path}`))\r\n\r\n    return mm(stream, options, callback)\r\n  }\r\n\r\n  // Format metadata with template \r\n  // And output to `stdout`\r\n  progress(metadata) {\r\n    var total = 70\r\n    var info = metadata.title\r\n    var duration = parseInt(metadata.duration)\r\n    var dots = total - 1\r\n    var speed = (duration * 1000) / total\r\n    var stdout = process.stdout\r\n\r\n    require('async').doWhilst(\r\n      (callback) => {\r\n        // Clear console\r\n        stdout.write('\\u001B[2J\\u001B[0;0f')\r\n\r\n        // Move cursor to beginning of line\r\n        stdout.cursorTo(0)\r\n        stdout.write(getProgress(total - dots, total, info))\r\n\r\n        setTimeout(callback, speed)\r\n\r\n        dots--\r\n      },\r\n      () => dots > 0,\r\n      (done) => {\r\n        stdout.moveCursor(0, -1)\r\n        stdout.clearLine()\r\n        stdout.cursorTo(0)\r\n      }\r\n    )\r\n  }\r\n}\r\n"]}