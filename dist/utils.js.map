{"version":3,"sources":["../libs/utils.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAO,SAAS,SAAS,CAAC,GAAG,EAAE;AAC7B,MAAI,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;;;AAGnD,MAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;AAChC,QAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;AAC/B,YAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;GACpB;;AAED,SAAO,QAAQ,CAAA;CAChB;;AAEM,SAAS,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE;AACnC,MAAI,KAAK,GAAG,EAAE,CAAA;;AAEd,MAAI,OAAO,IAAI,AAAC,KAAK,QAAQ,EAAE;;;AAC7B,SAAK,CAAC,IAAI,iDACN,MAAM,EAAI,IAAI,gCAChB,KAAK,EAAE,CAAC,gCACR,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,gBACxB,CAAA;;AAEF,WAAO,KAAK,CAAA;GACb;;AAED,MAAI,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK,EAAK;;;;AAE5B,QAAI,OAAO,IAAI,AAAC,KAAK,QAAQ,EAAE;AAC7B,UAAI,CAAC,GAAG,GAAG,KAAK,CAAA;;AAEhB,UAAI,IAAI,CAAC,MAAM,CAAC,EACd,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;;AAEtC,WAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAChB,aAAM;KACP;;;AAGD,SAAK,CAAC,IAAI,mDACN,MAAM,EAAI,IAAI,iCAChB,KAAK,EAAE,KAAK,iCACZ,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,iBACxB,CAAA;GACH,CAAC,CAAA;;AAEF,SAAO,KAAK,CAAA;CACb;;AAEM,SAAS,YAAY,CAAC,GAAG,EAAE;AAChC,MAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EACrB,OAAO,CAAC,CAAA;;AAEV,MAAI,GAAG,GAAG,CAAC,CAAA;AACX,MAAI,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAA;;AAExB,SAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA,AAAC,CAAC,GAAG,GAAG,CAAA;CACzD;;AAEM,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;AACtC,MAAI,GAAG,GAAG,EAAE,CAAA;AACZ,KAAG,IAAK,eAAe,GAAG,IAAI,AAAC,CAAA;AAC/B,KAAG,IAAI,KAAK,CAAA;;AAEZ,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EACxB,GAAG,IAAI,GAAG,CAAA;;AAEZ,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAC5B,GAAG,IAAI,GAAG,CAAA;;AAEZ,KAAG,IAAI,GAAG,CAAA;;AAEV,SAAO,GAAG,CAAA;CACX;;AAEM,SAAS,SAAS,CAAC,GAAG,EAAE;AAC7B,SAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAA;CAC5B","file":"utils.js","sourcesContent":["export function fetchName(str) {\r\n  var filename = str.substr(str.lastIndexOf('/') + 1)\r\n\r\n  // Escape URI like this: `http://domain.com/xxx.mp3?xcode=fasda`\r\n  if (filename.indexOf('?') !== -1) {\r\n    var parts = filename.split('?')\r\n    filename = parts[0]\r\n  }\r\n\r\n  return filename\r\n}\r\n\r\nexport function format(list, srcKey) {\r\n  var songs = []\r\n\r\n  if (typeof(list) === 'string') {\r\n    songs.push({\r\n      [ srcKey ]: list,\r\n      '_id': 0,\r\n      '_name': splitName(list),\r\n    })\r\n\r\n    return songs\r\n  }\r\n\r\n  list.forEach((item, index) => {\r\n    // If `songs` is a Map\r\n    if (typeof(item) === 'object') {\r\n      item._id = index\r\n\r\n      if (item[srcKey])\r\n        item._name = splitName(item[srcKey])\r\n\r\n      songs.push(item)\r\n      return\r\n    }\r\n\r\n    // If `songs` is a Array\r\n    songs.push({\r\n      [ srcKey ]: item,\r\n      '_id': index,\r\n      '_name': splitName(item)\r\n    })\r\n  })\r\n\r\n  return songs\r\n}\r\n\r\nexport function chooseRandom(arr) {\r\n  if (!arr || !arr.length)\r\n    return 0\r\n\r\n  let min = 0\r\n  let max = arr.length - 1\r\n\r\n  return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n\r\nexport function getProgress(p, t, info) {\r\n  var bar = ''\r\n  bar += ('Now playing: ' + info)\r\n  bar += '\\n['\r\n\r\n  for (var i = 0; i < p; i++)\r\n    bar += '>'\r\n\r\n  for (var i = p; i < t - 1; i++)\r\n    bar += ' '\r\n\r\n  bar += ']'\r\n\r\n  return bar\r\n}\r\n\r\nexport function splitName(str) {\r\n  return str.split('/').pop()\r\n}\r\n"]}